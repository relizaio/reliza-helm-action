name: 'RelizaHub Version and Publish Helm Chart Action'
description: 'GitHub Action to version and publish helm chart to an oci compliant registry and submit the release metadata to RelizaHub.'
branding:
  icon: 'anchor'
  color: 'green'
inputs:
  registry_username:
    description: "Username for chart repository"
    required: true
  registry_password:
    description: "Password for chart repository"
    required: true
  registry_host:
    description: "Host for chart repository"
    required: true
  helm_chart_name:
    description: "Name of the helm chart"
    required: true
  reliza_api_id:
    description: "Reliza Hub API ID"
    required: true
  reliza_api_key:
    description: "Reliza Hub API KEY"
    required: true
  reliza_api_url:
    description: "Reliza Hub API URL"
    required: false
    default: 'https://app.relizahub.com'
  path:
    description: "Path to the relative to root of the repo (default is '.')"
    required: false
    default: .
  ci_metadata:
    description: "Metadata for CI run, (Optional - default is GitHub)"
    required: false
  reliza_project_id:
    description: "Project UUID for this release if org-wide key is used"
    required: false
  registry_type:
    description: "Type of registry, [OCI | ECR | CHARTMUSEUM - default is OCI]"
    required: false
    default: OCI
  aws_region:
    description: "AWS region, required when registry type is ECR"
    required: false
  enable_sbom:
    required: false
    default: 'false'
    description: Generates SBOM and stores it along with the artifact
  push_to_rearm:
    description: "Whether to handle SBOM logic via ReARM and push release there as well. Below options are required for ReARM."
    required: false
    default: 'false'
  rearm_api_id:
    description: "ReARM API ID"
    required: false
  rearm_api_key:
    description: "ReARM API KEY"
    required: false
  rearm_api_url:
    description: "ReARM API URL"
    required: false
    default: 'https://demo.rearmhq.com'
  rearm_component_id:
    description: "Component UUID for this release on ReARM if org-wide key is used"
    required: false
  rearm_enable_public_cosign_sigstore:
    required: false
    default: 'false'
    description: "Sign SBOMs using public sigstore via cosign"
runs:
  using: "composite"
  steps:
    - id: setup-reliza-cli
      name: setup-reliza-cli
      uses: relizaio/setup-reliza-cli@4dcc898ec048f20a5809da24259f744408083573 # v2.1
      with: 
        version: 2024.07.6
    - id: get-version
      name: Get Version
      uses: relizaio/reliza-get-version@4517cde0dbb5b340f560a7e370f7d85923529915 # v1.8
      with: 
        reliza_api_id: ${{ inputs.reliza_api_id }}
        reliza_api_key: ${{ inputs.reliza_api_key }}
        reliza_api_url: ${{inputs.reliza_api_url}}
        path: ${{inputs.path}}/${{inputs.helm_chart_name}}
        reliza_project_id: ${{inputs.reliza_project_id}}
    - name: Instantiate Reliza status as Rejected to handle possible build failure
      shell: bash
      run: |
        echo "RELIZA_BUILD_STATUS=rejected" >> $GITHUB_ENV
        echo "REARM_BUILD_STATUS=rejected" >> $GITHUB_ENV
        echo "RELIZA_DO_BUILD=${{ steps.get-version.outputs.reliza_do_build}}" >> $GITHUB_ENV
    - name: Build and push docker container to Reliza Hub Registry
      shell: bash
      if: ${{env.RELIZA_DO_BUILD == 'true'}}
      continue-on-error: true
      run: |
        cd ${{ inputs.path }}
        # update version on the chart
        sed -i "/^version: /s/.*/version: ${{ steps.get-version.outputs.reliza_full_version }}/" ${{inputs.helm_chart_name}}/Chart.yaml
        
        # git commit and update
        git config --global user.name 'reliza-auto'
        git config --global user.email 'info@reliza.io'
        git add ${{inputs.helm_chart_name}}/Chart.yaml
        git commit -m "chore: bump helm chart version to ${{ steps.get-version.outputs.reliza_full_version }} [skip ci]"
        git push
        commit_sha=$(git log -1 --pretty='%H')
        
        if [ ! -z "${{ steps.get-version.outputs.reliza_last_commit }}" ]
        then
          commit_list=$(git log ${{ steps.get-version.outputs.reliza_last_commit }}..$commit_sha --date=iso-strict --pretty='%H|||%ad|||%s' ./ | base64 -w 0)
        else
          commit_list=$(git log -2 --date=iso-strict --pretty='%H|||%ad|||%s' ./ | base64 -w 0)
        fi        
        echo "COMMIT_LIST=$commit_list " >> $GITHUB_ENV
    - name: Install helm
      if: ${{env.RELIZA_DO_BUILD == 'true'}}
      uses: azure/setup-helm@b9e51907a09c216f16ebe8536097933489208112 # v4.3.0
      with:
        version: '3.17.2'
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@b47578312673ae6fa5b5096b330d9fbac3d116df # v4.2.1
      if: ${{ inputs.registry_type == 'ECR'}}
      with:
        aws-access-key-id: ${{ inputs.registry_username }}
        aws-secret-access-key: ${{ inputs.registry_password }}
        aws-region: ${{inputs.aws_region}}
    - name: Publish Helm Chart
      if: ${{env.RELIZA_DO_BUILD == 'true'}}
      shell: bash
      run: |
        cd ${{ inputs.path }}
        case ${{inputs.registry_type}} in

          OCI)
            #input_host=${{inputs.registry_host}}
            #helm_host=${input_host%%/*}
            helm registry login -u '${{ inputs.registry_username }}' -p '${{ inputs.registry_password }}' ${{inputs.registry_host}}
            helm package ${{inputs.helm_chart_name}}
            helm push $(pwd)/*.tgz oci://${{inputs.registry_host}}
            ;;

          ECR)
            aws ecr get-login-password \
              --region ${{inputs.aws_region}} | helm registry login \
              --username AWS \
              --password-stdin ${{inputs.registry_host}}
            helm package ${{inputs.helm_chart_name}}
            helm push $(pwd)/*.tgz oci://${{inputs.registry_host}}
            ;;

          CHARTMUSEUM)
            # publish helm chart on Reliza Hub registry
            docker run --rm -v $(pwd)/${{inputs.helm_chart_name}}:/apps/helm relizaio/helmpush cm-push /apps/helm ${{inputs.registry_host}} -u '${{ inputs.registry_username }}' -p '${{ inputs.registry_password }}'

            # download and compute sha256 digest for helm chart package tgz
            docker run --rm -v $(pwd):/apps/helm --entrypoint /bin/sh relizaio/helmpush -c "helm repo add repo ${{inputs.registry_host}} --username '${{ inputs.registry_username }}' --password '${{ inputs.registry_password }}' && helm pull repo/${{inputs.helm_chart_name}} --version ${{ steps.get-version.outputs.reliza_full_version }} -d /apps/helm/"
            ;;
        esac
              
        sha_digest=$(sha256sum $(pwd)/*.tgz | cut -f 1 -d ' ')
        echo "shadigest = $sha_digest"    
  
        echo "SHA_DIGEST=$sha_digest" >> $GITHUB_ENV
        echo "RELIZA_BUILD_STATUS=complete " >> $GITHUB_ENV
        echo "REARM_BUILD_STATUS=ASSEMBLED" >> $GITHUB_ENV
    - name: Submit metadata to Reliza Hub
      uses: relizaio/reliza-add-release@3e9329b4ee80dd0b4cd7f08a1277bf4465da3539 # v1.3
      if: ${{env.RELIZA_DO_BUILD == 'true'}}
      with:
        reliza_api_id: ${{ inputs.reliza_api_id }}
        reliza_api_key: ${{ inputs.reliza_api_key }}
        reliza_api_url: ${{inputs.reliza_api_url}}
        image_full_name: ${{inputs.registry_host}}/${{inputs.helm_chart_name}}
        image_digest: sha256:$SHA_DIGEST
        reliza_full_version: ${{ steps.get-version.outputs.reliza_full_version }}
        reliza_build_start: ${{ steps.get-version.outputs.reliza_build_start }}
        reliza_build_status: $RELIZA_BUILD_STATUS
        commit_list: $COMMIT_LIST
        artifact_type: File
        reliza_project_id: ${{inputs.reliza_project_id}}
        enable_sbom: ${{inputs.enable_sbom}}
        registry_username: ${{inputs.registry_username}}
        registry_password: ${{inputs.registry_password}}
        registry_host: ${{inputs.registry_host}}
        path: ${{inputs.path}}
    - id: setup-rearm
      name: setup-rearm
      uses: relizaio/setup-rearm-cli-action@4cf6087e5ba79bcd1be9ffffcda853fbf2207ad6 # v1.0.0
      if: ${{inputs.push_to_rearm == 'true' && env.RELIZA_DO_BUILD == 'true'}}
      with:
        version: 25.07.1
    - name: Submit metadata to ReARM
      uses: relizaio/rearm-add-release@07e1ed5a253548ce54fe5fb7e146e1a46c5f9360 # v1.1.0
      if: ${{inputs.push_to_rearm == 'true' && env.RELIZA_DO_BUILD == 'true'}}
      with:
        rearm_api_id: ${{ inputs.rearm_api_id }}
        rearm_api_key: ${{ inputs.rearm_api_key }}
        rearm_api_url: ${{inputs.rearm_api_url}}
        image_full_name: ${{inputs.registry_host}}/${{inputs.helm_chart_name}}
        image_digest: sha256:$SHA_DIGEST
        rearm_full_version: ${{ steps.get-version.outputs.reliza_full_version }}
        rearm_build_start: ${{ steps.get-version.outputs.reliza_build_start }}
        rearm_build_status: $REARM_BUILD_STATUS
        rearm_component_id: ${{inputs.rearm_component_id}}
        enable_sbom: "true"
        source_code_sbom_type: helm
        deliverable_type: FILE
        registry_username: ${{inputs.registry_username}}
        registry_password: ${{inputs.registry_password}}
        registry_host: ${{inputs.registry_host}}
        path: ${{inputs.path}}
        enable_public_cosign_sigstore: ${{inputs.rearm_enable_public_cosign_sigstore}}
